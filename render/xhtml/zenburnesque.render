--- 
name: Zenburnesque
tags: 
- begin: <span class="Comment">
  end: </span>
  selector: comment
- begin: <span class="Directive">
  end: </span>
  selector: keyword.other.directive
- begin: <span class="LineNumberDirectives">
  end: </span>
  selector: keyword.other.directive.line-number
- begin: <span class="Characters">
  end: </span>
  selector: constant.character
- begin: <span class="String">
  end: </span>
  selector: string
- begin: <span class="Number">
  end: </span>
  selector: constant.numeric
- begin: <span class="FloatingPointNumbers">
  end: </span>
  selector: constant.numeric.floating-point
- begin: <span class="BuiltInConstant">
  end: </span>
  selector: constant.language
- begin: <span class="UserDefinedConstant">
  end: </span>
  selector: constant.character, constant.other
- begin: <span class="Variable">
  end: </span>
  selector: variable.parameter, variable.other
- begin: <span class="LanguageKeyword">
  end: </span>
  selector: keyword
- begin: <span class="ModuleKeyword">
  end: </span>
  selector: entity.name.module,  support.other.module
- begin: <span class="Operators">
  end: </span>
  selector: keyword.operator
- begin: <span class="FloatingPointInfixOperators">
  end: </span>
  selector: source.ocaml keyword.operator.symbol.infix.floating-point
- begin: <span class="FloatingPointPrefixOperators">
  end: </span>
  selector: source.ocaml keyword.operator.symbol.prefix.floating-point
- begin: <span class="StorageTypes">
  end: </span>
  selector: storage.type
- begin: <span class="VariantTypes">
  end: </span>
  selector: entity.name.class.variant
- begin: <span class="Storage">
  end: </span>
  selector: storage
- begin: <span class="TypeName">
  end: </span>
  selector: entity.name.type
- begin: <span class="InheritedClass">
  end: </span>
  selector: entity.other.inherited-class
- begin: <span class="FunctionName">
  end: </span>
  selector: entity.name.function
- begin: <span class="TypeName">
  end: </span>
  selector: storage.type.user-defined
- begin: <span class="ClassTypeName">
  end: </span>
  selector: entity.name.type.class.type
- begin: <span class="FunctionArgument">
  end: </span>
  selector: variable.parameter
- begin: <span class="TagName">
  end: </span>
  selector: entity.name.tag
- begin: <span class="TagAttribute">
  end: </span>
  selector: entity.other.attribute-name
- begin: <span class="LibraryFunction">
  end: </span>
  selector: support.function
- begin: <span class="LibraryConstant">
  end: </span>
  selector: support.constant
- begin: <span class="LibraryClassType">
  end: </span>
  selector: support.type, support.class
- begin: <span class="LibraryVariable">
  end: </span>
  selector: support.variable
- begin: <span class="Invalid">
  end: </span>
  selector: invalid
line-numbers: 
  begin: <span class="line-numbers">
  end: </span>
