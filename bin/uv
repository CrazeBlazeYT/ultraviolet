#!/usr/bin/env ruby

begin
   require 'rubygems'
   require 'uv'
rescue LoadError
   $:.unshift File.join( File.dirname(__FILE__), '..', 'lib' )
   require 'uv'
end

require 'optparse'
require 'ostruct'

o = OpenStruct.new

options = OptionParser.new

options.banner =<<END 

Usage: uv [options] input_file

Parses input_file and outputs the coresponding HTML to stdout.
If no syntax is specified, it tries to guess the best one.
If no theme is specified, defaults to espresso_libre.

Example:

   uv -t amy -h ~/.bashrc > bashrc.html
   
   Renders the contents of ~/.bashrc to file bashrc.html
   as a standalone web page.

All options are non-mandatory

Options:

END

options.on( "-s SYNTAX", "--syntax SYNTAX", <<DESCRIPTION, Uv.syntaxes) {|val| o.syntax = val}
The file's syntax (e.g. ruby, c++, etc.) 
DESCRIPTION

options.on( "-t THEME", "--theme THEME", <<DESCRIPTION, Uv.themes) {|val| o.theme = val}
The theme to be used (e.g. amy, espresso_libre, etc.)
DESCRIPTION

options.on( "-n", "--no-lines", <<DESCRIPTION ) {|val| o.no_lines = !val}
Produces output without line numbers
DESCRIPTION


options.on( "-h", "--headers", <<DESCRIPTION ) {|val| o.headers = val}
Include headers, outputs a self-contained web page
DESCRIPTION

options.on( "-d", "--debug", <<DESCRIPTION ) {|val| o.debug = val}
Outputs debug information instead of normal page rendering
DESCRIPTION
   
options.on( "-l [syntaxes|themes]", "--list [syntaxes|themes]", ['syntaxes', 'themes'], <<DESCRIPTION ) {|val| o.list = val}
Lists all the available syntaxes/themes
DESCRIPTION
   
   
options.on( "-?", "--help", <<DESCRIPTION ) {|val| o.help = val}
Show this message
DESCRIPTION

rest = options.parse( ARGV )


if o.help
   puts options
   exit
elsif o.list
   if o.list == 'syntaxes'
      puts "Available syntaxes:\n"
      Uv.syntaxes.sort.each{ |s| puts "   - #{s}"}
   elsif o.list == 'themes'
      puts "Available themes:\n"
      Uv.themes.sort.each{ |t| puts "   - #{t}"}
   else
      STDERR.puts "Option #{o.list} is not valid should be one of [syntaxes, themes]"
   end
   exit
end

o.filename = rest[0]

if o.filename && ! o.syntax
   candidates = Uv.syntax_for_file o.filename
  if candidates.size > 1
      STDERR.puts "Many syntaxes match, please specify"
      STDERR.puts "\nMatching syntaxes:"
      candidates.sort.each { |name, syntax| STDERR.puts "\t - " + name}
      exit -1
   end
   o.syntax = candidates.first.first
end

unless o.syntax
   STDERR.puts "No default syntax found, please specify"
   exit -1
end

if o.filename
   o.text = File.read(o.filename) 
else
   o.text = STDIN
end

if o.debug
   Uv.debug( o.text, o.syntax )
   exit
end

o.theme ||= "espresso_libre"
o.stylesheet = "#{o.theme}.css"

puts <<END
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en">

<head>
  <meta http-equiv="content-type" content="text/html; charset=iso-8859-1" />
  <meta http-equiv="cache-control" content="no-cache" />
  <meta http-equiv="expires" content="3600" />
  <meta name="revisit-after" content="2 days" />
  <meta name="robots" content="index,follow" />
  <meta name="publisher" content="Dichodaemon" />
  <meta name="copyright" content="Dichodaemon" />

  <meta name="author" content="Dichodaemon" />
  <meta name="distribution" content="global" />
  <meta name="description" content="Ocatarinetabellachithchix" />
  <meta name="keywords" content="arzaversperia flexilimosos toves" />
  <link rel="stylesheet" type="text/css" media="screen,projection,print" href="css/#{o.stylesheet}" />
  <title>#{o.theme}</title>

</head>

<body>
END

puts Uv.parse( o.text, "xhtml",  o.syntax, ! o.lines, o.theme )

puts <<END
  <p>
    <a href="http://validator.w3.org/check?uri=referer">
      <img style="border:0"
           src="http://www.w3.org/Icons/valid-xhtml10"
           alt="Valid XHTML 1.0 Strict" height="31" width="88" />
    </a>
    <a href="http://jigsaw.w3.org/css-validator/check?uri=referer">
      <img style="border:0;width:88px;height:31px"
           src="http://jigsaw.w3.org/css-validator/images/vcss" 
           alt="Valid CSS!" />
    </a>
  </p>
</body>
</html>
END
